{"version":3,"sources":["webpack:///./src/components/editUser.js","webpack:///./src/pages/admin/edit.js","webpack:///./node_modules/@material-ui/core/esm/InputAdornment/InputAdornment.js","webpack:///./node_modules/@material-ui/core/esm/Divider/Divider.js"],"names":["useStyles","makeStyles","theme","root","display","flexDirection","alignItems","fc","margin","minWidth","submitBtn","NewUser","props","classes","useState","submitDisabled","setSubmitDisabled","data","setData","image","oldImage","name","phone","nickname","blok","error","setError","handleChange","prop","event","f","target","files","type","includes","blob","URL","createObjectURL","url","fetch","then","response","Promise","resolve","reject","reader","FileReader","onloadend","result","onerror","readAsDataURL","value","checkIsEmpty","trim","validateName","strict","str","replace","txt","charAt","toUpperCase","substr","toLowerCase","validatePhone","startsWith","substring","test","validateBlok","className","clsx","FormControl","variant","TextField","helperText","id","label","onChange","onBlur","InputProps","notched","placeholder","labelWidth","required","startAdornment","InputAdornment","position","InputLabel","htmlFor","OutlinedInput","split","inputProps","accept","style","Divider","Grid","container","spacing","item","xs","Button","onClick","console","log","patchUser","alert","window","location","catch","reason","msg","color","disabled","New","Cookies","get","isLogin","useQueryParam","NumberParam","isDataLoading","setIsDataLoading","useEffect","getOneUser","d","finally","Container","marginTop","ref","children","_props$component","component","Component","_props$disablePointer","disablePointerEvents","_props$disableTypogra","disableTypography","variantProp","other","muiFormControl","Provider","hiddenLabel","filled","positionStart","positionEnd","marginDense","height","maxHeight","whiteSpace","marginRight","marginLeft","pointerEvents","_props$absolute","absolute","_props$flexItem","flexItem","_props$light","light","_props$orientation","orientation","_props$role","role","undefined","_props$variant","vertical","border","flexShrink","backgroundColor","palette","divider","bottom","left","width","inset","middle","alignSelf"],"mappings":"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","file":"component---src-pages-admin-edit-js-992bc5d79f07e690187a.js","sourcesContent":["import React, {Fragment, useEffect, useState} from \"react\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport FilledInput from '@material-ui/core/FilledInput';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport ControlPointIcon from \"@material-ui/icons/ControlPoint\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {getOneUser, patchUser} from \"../model/data\";\r\nimport ContactCard from'./contactCard.js'\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"flex-start\",\r\n    },\r\n    fc: {\r\n        margin: \"17px\",\r\n        minWidth: \"300px\"\r\n    },\r\n    submitBtn:{\r\n        margin: \"17px\",\r\n    }\r\n\r\n}));\r\nfunction toTitleCase(str) {\r\n    return str.replace(\r\n        /\\w\\S*/g,\r\n        function(txt) {\r\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n        }\r\n    );\r\n}\r\nexport default function NewUser(props) {\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n    const [submitDisabled,setSubmitDisabled] = useState(false);\r\n\r\n    const [data, setData] = useState({...props.data});\r\n    const [oldImage, setOldImage] = useState(props.data.image);\r\n\r\n    const [error, setError] = useState({\r\n        name: [false, \"\"],\r\n        phone: [false, \"\"],\r\n        nickname: [false, \"\"],\r\n        blok: [false, \"\"],\r\n        image: [false, \"\"],\r\n    });\r\n\r\n    const toDataURL = url => fetch(url)\r\n        .then(response => response.blob())\r\n        .then(blob => new Promise((resolve, reject) => {\r\n            const reader = new FileReader()\r\n            reader.onloadend = () => resolve(reader.result)\r\n            reader.onerror = reject\r\n            reader.readAsDataURL(blob)\r\n        }))\r\n\r\n    const handleChange = (prop) => (event) => {\r\n        if (prop === \"image\") {\r\n            const f = event.target.files[0];\r\n\r\n            if (typeof f === \"undefined\") {\r\n                setData({...data, [prop]: oldImage});\r\n                return\r\n            }\r\n\r\n            if (typeof f.type === \"string\" && !([\"image/png\", \"image/jpeg\", \"image/jpg\"].includes(f.type))) {\r\n                setError({...error, 'image': [true, \"Supported file: png, jpg, jpeg\"]})\r\n                return\r\n            }\r\n            const blob = URL.createObjectURL(f);\r\n            toDataURL(blob).then(value => {\r\n                setData({...data, [prop]: value});\r\n            })\r\n            setError({...error, 'image': [false, \"\"]})\r\n        } else {\r\n            setData({...data, [prop]: event.target.value});\r\n        }\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        setSubmitDisabled(true);\r\n        if ( !validateName(true) || !validatePhone(true) || !validateBlok(true)){\r\n            setSubmitDisabled(false);\r\n            return\r\n        }\r\n        if (data.image === \"\"){\r\n            delete data.image;\r\n        }\r\n        console.log(\"data\",{...data,phone:`+62${data.phone}`})\r\n        patchUser({...data,phone:`+62${data.phone}`})\r\n            .then(value => {\r\n                alert(\"Update success\");\r\n                const isBrowser = () => typeof window !== \"undefined\"\r\n                if (isBrowser()){\r\n                    window.location = \"/admin\";\r\n                }\r\n            })\r\n            .catch(reason => {\r\n                alert(`Update failed: ${reason.msg || \"Unknown\"}`);\r\n                setSubmitDisabled(false);\r\n            })\r\n\r\n    };\r\n\r\n\r\n    const checkIsEmpty = (value) => {\r\n        return ((value === \"\") || (typeof value === \"string\" && value.trim() === \"\"))\r\n    };\r\n\r\n    const validateName = (strict=false) => {\r\n        if (strict){\r\n            if (typeof data.name !== \"string\" || data.name === \"\"){\r\n                setError({...error, 'name': [true, \"Cannot Empty\"]})\r\n                return false;            }\r\n        }\r\n        const isEmpty = checkIsEmpty(data.name);\r\n        if (isEmpty) {\r\n            setError({...error, 'name': [true, \"Cannot Empty\"]})\r\n            return false;\r\n        }\r\n        setData({...data,name:toTitleCase(data.name)})\r\n        setError({...error, 'name': [false, \"\"]})\r\n        return true\r\n    }\r\n    const validatePhone = (strict = false) => {\r\n        if (strict){\r\n            if (typeof data.phone !== \"string\" || data.phone === \"\"){\r\n                setError({...error, 'phone': [true, \"Cannot Empty\"]})\r\n                return false            }\r\n        }\r\n        const isEmpty = checkIsEmpty(data.phone);\r\n        if (isEmpty) {\r\n            setError({...error, 'phone': [true, \"Cannot Empty\"]})\r\n            return false\r\n        }\r\n        if (typeof data.phone === \"string\") {\r\n            data.phone = data.phone.replace(\" \", \"\");\r\n            data.phone = data.phone.replace(\"+62\", \"\");\r\n            if (data.phone.startsWith(\"0\")) {\r\n                data.phone = data.phone.substring(1);\r\n            }\r\n\r\n        }\r\n        const isnum = /^\\d+$/.test(data.phone);\r\n        if (!isnum) {\r\n            setError({...error, 'phone': [true, \"Only number allowed\"]})\r\n            return false\r\n        }\r\n\r\n        setData({...data, 'phone': data.phone});\r\n\r\n        setError({...error, 'phone': [false, \"\"]})\r\n        return true\r\n    }\r\n\r\n    const validateBlok = (strict=false) => {\r\n        if (strict){\r\n            if (typeof data.blok !== \"string\" || data.blok === \"\"){\r\n                setError({...error, 'blok': [true, \"Cannot Empty\"]})\r\n                return false            }\r\n        }\r\n        const isEmpty = checkIsEmpty(data.blok);\r\n        if (isEmpty) {\r\n            setError({...error, 'blok': [true, \"Cannot Empty\"]})\r\n            return false\r\n        }\r\n\r\n        if (typeof data.blok === \"string\") {\r\n\r\n            data.blok = data.blok.toUpperCase();\r\n\r\n        }\r\n        const isnum = /^[A-Z][0-9]+$/.test(data.blok);\r\n        if (!isnum) {\r\n            setError({...error, 'blok': [true, \"Example format: A1, B15, C215\"]})\r\n            return false\r\n        }\r\n\r\n        setData({...data, 'blok': data.blok});\r\n\r\n        setError({...error, 'blok': [false, \"\"]})\r\n        return true\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={clsx(classes.root)}>\r\n            <h2>Add new</h2>\r\n            <FormControl className={clsx(classes.fc)} variant=\"outlined\">\r\n                {/*<InputLabel htmlFor=\"name\">Name</InputLabel>*/}\r\n                <TextField\r\n                    error={error.name[0]}\r\n                    helperText={error.name[1]}\r\n                    id=\"name\"\r\n                    label={\"Name\"}\r\n                    type={\"text\"}\r\n                    value={data.name}\r\n                    onChange={handleChange('name')}\r\n                    onBlur={validateName}\r\n                    InputProps={{\r\n                        notched:data.name\r\n                    }}\r\n                    placeholder={\"John Doe\"}\r\n                    labelWidth={45}\r\n                    variant={\"outlined\"}\r\n                    required\r\n\r\n                />\r\n\r\n            </FormControl>\r\n            <FormControl className={clsx(classes.fc)} variant=\"outlined\">\r\n                {/*<InputLabel htmlFor=\"phone\">Phone</InputLabel>*/}\r\n                <TextField\r\n                    error={error.phone[0]}\r\n                    helperText={error.phone[1]}\r\n                    id=\"phone\"\r\n                    label={\"Phone\"}\r\n                    type={\"text\"}\r\n                    value={data.phone}\r\n                    onChange={handleChange('phone')}\r\n                    onBlur={validatePhone}\r\n                    InputProps={{\r\n                        startAdornment: <InputAdornment position=\"start\">+62</InputAdornment>,\r\n                    }}\r\n                    labelWidth={50}\r\n                    variant={\"outlined\"}\r\n                    required\r\n\r\n                />\r\n            </FormControl>\r\n            <FormControl className={clsx(classes.fc)} variant=\"outlined\">\r\n                <InputLabel htmlFor=\"nickname\">Nickname</InputLabel>\r\n                <OutlinedInput\r\n                    id=\"nickname\"\r\n                    type={\"text\"}\r\n                    value={data.nickname}\r\n                    onChange={handleChange('nickname')}\r\n                    placeholder={`Mas ${(typeof data.name === \"string\" && data.name.split(' ')[0]) || 'John'}, Pak ${(typeof data.name === \"string\" && data.name.split(' ')[0]) || 'John'}, ${(typeof data.name === \"string\" && data.name.split(' ')[0]) || 'John'}`}\r\n                    labelWidth={75}\r\n                />\r\n            </FormControl>\r\n            <FormControl className={clsx(classes.fc)} variant=\"outlined\">\r\n                {/*<InputLabel htmlFor=\"blok\">Blok</InputLabel>*/}\r\n                <TextField\r\n                    error={error.blok[0]}\r\n                    helperText={error.blok[1]}\r\n                    id=\"blok\"\r\n                    label={\"Blok\"}\r\n                    type={\"text\"}\r\n                    value={data.blok}\r\n                    onChange={handleChange('blok')}\r\n                    onBlur={validateBlok}\r\n                    labelWidth={32}\r\n                    placeholder={\"A1\"}\r\n                    variant={\"outlined\"}\r\n                    required\r\n                />\r\n            </FormControl>\r\n            <FormControl className={clsx(classes.fc)} variant=\"outlined\">\r\n                {/*<InputLabel htmlFor=\"foto\" >Foto</InputLabel>*/}\r\n                <TextField\r\n                    error={error.image[0]}\r\n                    helperText={error.image[1]}\r\n                    label={\"Foto\"}\r\n                    id=\"foto\"\r\n                    type={\"file\"}\r\n                    // value={data.image}\r\n                    inputProps={{\r\n                        accept: \"image/x-png,image/jpeg\"\r\n                    }}\r\n                    onChange={handleChange('image')}\r\n\r\n                    InputProps={{\r\n                        startAdornment: <InputAdornment position=\"start\">\r\n\r\n                        </InputAdornment>\r\n                    }}\r\n                    labelWidth={35}\r\n                    variant={\"outlined\"}\r\n\r\n                />\r\n            </FormControl>\r\n            <div  style={{margin:\"9px\"}}>\r\n                <Divider/>\r\n            </div>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={3}>\r\n                    <ContactCard {...data}/>\r\n                </Grid>\r\n            </Grid>\r\n            <Button\r\n                className={clsx(classes.submitBtn)}\r\n                onClick={handleSubmit}\r\n                variant=\"contained\"\r\n                color=\"default\"\r\n                disabled={submitDisabled}\r\n            >Submit</Button>\r\n        </div>\r\n    )\r\n}","import React, {Fragment, useEffect, useState} from \"react\";\r\nimport EditUser from \"../../components/editUser.js\";\r\nimport {Cookies} from \"react-cookie\";\r\nimport AppBar from \"../../components/appbar\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { useQueryParam, NumberParam } from \"use-query-params\";\r\nimport {getOneUser} from \"../../model/data\";\r\n\r\n\r\nexport default function New(props) {\r\n    const [isLogin,setIsLogin] = useState((new Cookies).get(\"_awa\"));\r\n    const [id, setId] = useQueryParam(\"id\", NumberParam);\r\n    const [isDataLoading, setIsDataLoading] = useState(true);\r\n    const [data, setData] = useState({\r\n        name: null,\r\n        phone: null,\r\n        nickname: \"\",\r\n        blok: null,\r\n        image: \"\",\r\n    });\r\n    useEffect(() => {\r\n        setIsDataLoading(true);\r\n        getOneUser(id)\r\n            .then(d => {\r\n                d.phone = d.phone.replace(\"+62\",\"\");\r\n                setData(d);\r\n            })\r\n            .finally(() => {\r\n                setIsDataLoading(false);\r\n            })\r\n        ;\r\n    }, []);\r\n\r\n    function redirectToHome(){\r\n        const isBrowser = () => typeof window !== \"undefined\"\r\n        if (isBrowser()){\r\n            window.location = \"/\";\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <AppBar/>\r\n            <Container style={{marginTop:\"18px\"}}>\r\n                {\r\n                    isLogin? (isDataLoading? \"Loading...\": <EditUser id={id} data={data}/>) : redirectToHome()\r\n                }\r\n\r\n            </Container>\r\n        </Fragment>\r\n    )\r\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport Typography from '../Typography';\nimport withStyles from '../styles/withStyles';\nimport FormControlContext, { useFormControl } from '../FormControl/FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    height: '0.01em',\n    // Fix IE 11 flexbox alignment. To remove at some point.\n    maxHeight: '2em',\n    alignItems: 'center',\n    whiteSpace: 'nowrap'\n  },\n\n  /* Styles applied to the root element if `variant=\"filled\"`. */\n  filled: {\n    '&$positionStart:not($hiddenLabel)': {\n      marginTop: 16\n    }\n  },\n\n  /* Styles applied to the root element if `position=\"start\"`. */\n  positionStart: {\n    marginRight: 8\n  },\n\n  /* Styles applied to the root element if `position=\"end\"`. */\n  positionEnd: {\n    marginLeft: 8\n  },\n\n  /* Styles applied to the root element if `disablePointerEvents=true`. */\n  disablePointerEvents: {\n    pointerEvents: 'none'\n  },\n\n  /* Styles applied if the adornment is used inside <FormControl hiddenLabel />. */\n  hiddenLabel: {},\n\n  /* Styles applied if the adornment is used inside <FormControl margin=\"dense\" />. */\n  marginDense: {}\n};\nvar InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disablePointer = props.disablePointerEvents,\n      disablePointerEvents = _props$disablePointer === void 0 ? false : _props$disablePointer,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      position = props.position,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"]);\n\n  var muiFormControl = useFormControl() || {};\n  var variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('Material-UI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  return /*#__PURE__*/React.createElement(FormControlContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, disablePointerEvents && classes.disablePointerEvents, muiFormControl.hiddenLabel && classes.hiddenLabel, variant === 'filled' && classes.filled, {\n      'start': classes.positionStart,\n      'end': classes.positionEnd\n    }[position], muiFormControl.margin === 'dense' && classes.marginDense),\n    ref: ref\n  }, other), typeof children === 'string' && !disableTypography ? /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\"\n  }, children) : children));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputAdornment'\n})(InputAdornment);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      height: 1,\n      margin: 0,\n      // Reset browser default style.\n      border: 'none',\n      flexShrink: 0,\n      backgroundColor: theme.palette.divider\n    },\n\n    /* Styles applied to the root element if `absolute={true}`. */\n    absolute: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `variant=\"inset\"`. */\n    inset: {\n      marginLeft: 72\n    },\n\n    /* Styles applied to the root element if `light={true}`. */\n    light: {\n      backgroundColor: fade(theme.palette.divider, 0.08)\n    },\n\n    /* Styles applied to the root element if `variant=\"middle\"`. */\n    middle: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      height: '100%',\n      width: 1\n    },\n\n    /* Styles applied to the root element if `flexItem={true}`. */\n    flexItem: {\n      alignSelf: 'stretch',\n      height: 'auto'\n    }\n  };\n};\nvar Divider = /*#__PURE__*/React.forwardRef(function Divider(props, ref) {\n  var _props$absolute = props.absolute,\n      absolute = _props$absolute === void 0 ? false : _props$absolute,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'hr' : _props$component,\n      _props$flexItem = props.flexItem,\n      flexItem = _props$flexItem === void 0 ? false : _props$flexItem,\n      _props$light = props.light,\n      light = _props$light === void 0 ? false : _props$light,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$role = props.role,\n      role = _props$role === void 0 ? Component !== 'hr' ? 'separator' : undefined : _props$role,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'fullWidth' : _props$variant,\n      other = _objectWithoutProperties(props, [\"absolute\", \"classes\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'fullWidth' && classes[variant], absolute && classes.absolute, flexItem && classes.flexItem, light && classes.light, orientation === 'vertical' && classes.vertical),\n    role: role,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDivider'\n})(Divider);"],"sourceRoot":""}